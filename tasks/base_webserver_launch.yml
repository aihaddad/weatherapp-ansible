- name: Create base webserver instance
  ec2_instance:
    name: AnsibleBaseWebserver
    instance_type: t3.nano
    image_id: "{{ default_amis.images[-1].image_id }}"
    key_name: webservers_key
    vpc_subnet_id: "{{ default_subnets.subnets[0].subnet_id }}"
    network:
      assign_public_ip: yes
    security_group: webservers_access
    state: running
    wait: yes
  register: base_webserver
  
- name: Add base webserver to runtime inventory
  add_host:
    name: base_webserver
    ansible_host: "{{ base_webserver.instances[0].public_dns_name }}"
    ansible_user: ec2-user
    ansible_ssh_common_args: "'-o StrictHostKeyChecking=no'"
    ansible_ssh_private_key_file: .keypairs/webservers_key.pem
  register: inv
- debug: var=inv

- name: Commit webservers to inventory file
  lineinfile:
    path: inventory
    insertafter: '^\[webservers\]'
    line: >-
      {{ inv.add_host.host_name }}
      ansible_user={{ inv.add_host.host_vars.ansible_user }}
      ansible_ssh_common_args={{ inv.add_host.host_vars.ansible_ssh_common_args }}
      ansible_ssh_private_key_file={{ inv.add_host.host_vars.ansible_ssh_private_key_file }}
    state: present
- meta: refresh_inventory

- name: Get base webserver facts
  ec2_instance_info:
    filters:
      instance-state-name: running
      tag:Name: AnsibleBaseWebserver
  register: base_webserver

- name: Cleanup facts file
  file:
    path: facts/base_webserver.yml
    state: absent

- name: Store facts to YAML
  lineinfile:
    path: facts/base_webserver.yml
    create: yes
    line: "{{ base_webserver | to_nice_yaml(indent=2) }}"